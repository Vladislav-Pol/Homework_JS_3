// ___ Task 1 ___
console.log("___ Task 1 ___");
let i = 1;
while (i <=50) {
    console.log(i);
    i++;
}
i = 35;
console.log("___ ___ ___");
while (i >= 8){
    console.log(i);
    i--;
}

// ___ Task 2 ___
console.log("___ Task 2 ___");
i = 89;
let text_task2 = "",
    text_task22 = "";

while (i >= 11){
    text_task2 += (i + "<br/>");
    text_task22 += (i + "\n");
    i --;
}
console.log(text_task22);

// ___ Task 3 ___
console.log("___ Task 3 ___");
let sum = 0;
i = 100;
while (i >= 0){
    sum +=i;
    i--;
}
console.log(sum);

// ___ Task 4 ___
console.log("___ Task 4 ___");
i = 5;
sum = 0;
let j;
while(i >= 1){
    j = 0;
    while(j <= i){
        sum += j;
        j++;
    }
    console.log(`В числе ${i} сумма чисел равна ${sum}`);
    sum = j = 0;
    i--;
}

// ___ Task 5 ___
console.log("___ Task 5 ___");

/*
5. Выведите чётные числа от 8 до 56. Решить задание через while и for.
6. Необходимо вывести на экран полную таблицу умножения (от 2 до 10) в виде:
2*2 = 4
2*3 = 6
2*4 = 8
2*5 = 10
...
3*1=3
3*2=6
3*3=9
3*4=12
...
Для решения задачи используйте вложенные циклы.
7. Дано число n=1000. Делите его на 2 столько раз, пока результат деления не станет
меньше 50. Какое число получится? Посчитайте количество итераций, необходимых
для этого (итерация - это проход цикла), и запишите его в переменную num.
8. Запустите цикл, в котором пользователю предлагается вводить число с клавиатуры, до
тех пор, пока не будет введена пустая строка или 0. После выхода из цикла выведите
общую сумму и среднее арифметическое введённых чисел. Если пользователь ввел не
число, то вывести сообщение об ошибке ввода. При подсчете учесть, что пользователь
может ввести отрицательное значение.
9. Дана строка с числами разделенными пробелами «4 98 4 6 1 32 4 65 4 3 5 7 89 7 10 1 36
8 57». Найдите самое большое и самое маленькое число в строке, используя цикл.
10. Дано произвольное целое число n. Написать программу, которая:
a. разбивает число n на цифры и выводит их на экран;
b. подсчитывает сколько цифр в числе n;
c. находит сумму цифр числа n;

Курс «Front-End».
Блок «JavaScript».
Преподаватель: Краевский Сергей Игоревич.
LinkedIn: https://www.linkedin.com/in/skraevskiy/

7

d. меняет порядок цифр числа n на обратный.
Пример: вводится число 123: цифр в числе = 3; сумма = 6; обратный порядок 321.
Для ввода значений можете использовать ф-цию prompt(), либо задавать значения при
инициализации переменных в коде.
Для вывода результатов скриптов вы можете использовать функции: alert() для вывода
всплывающего окна; console.log() для вывода в консоль браузера; document.write() для вывода
в «тело» HTML-документа.
 */